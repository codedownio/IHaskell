name: CI

on:
  push:
    paths-ignore:
      - 'demo/**'
      - 'docker/**'
      - 'Dockerfile'
      - '.dockerignore'
      - '.ghci'
      - '.gitignore'
      - 'images/**'
      - 'notebooks/**'
      - 'README.md'
      - 'hie.yaml'
  pull_request:
    paths-ignore:
      - 'demo/**'
      - 'docker/**'
      - 'Dockerfile'
      - '.dockerignore'
      - '.ghci'
      - '.gitignore'
      - 'images/**'
      - 'notebooks/**'
      - 'README.md'
      - 'hie.yaml'

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
        - stack-yaml: 'stack/stack-8.2.yaml'
        - stack-yaml: 'stack/stack-8.4.yaml'
        - stack-yaml: 'stack/stack-8.6.yaml'
        - stack-yaml: 'stack/stack-8.8.yaml'
        - stack-yaml: 'stack/stack-8.10.yaml'
        - stack-yaml: 'stack/stack-9.0.yaml'
        - stack-yaml: 'stack/stack-9.2.yaml'
        - stack-yaml: 'stack/stack-9.4.yaml'
        - stack-yaml: 'stack/stack-9.6.yaml'
        - stack-yaml: 'stack.yaml'

    steps:
      - uses: actions/checkout@v3

      - name: Update system dependencies
        run: |
          sudo apt update

      - name: Install system dependencies
        run: |
          sudo apt install libmagic-dev libgmp-dev libblas-dev liblapack-dev libcairo2-dev libpango1.0-dev libzmq3-dev jq

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - uses: haskell/actions/setup@v2
        name: Setup Haskell Stack
        with:
          enable-stack: true
          stack-version: "latest"

      - uses: actions/cache@v3
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.versions.stack-yaml }}-${{ hashFiles(format('./{0}', matrix.versions.stack-yaml)) }}

      - name: Build dependencies
        run: |
          # Used to avoid 'source and destination file are the same' error
          mv ${{ matrix.versions.stack-yaml }} intermediate-stack.yaml
          mv intermediate-stack.yaml stack.yaml

          mv ${{ matrix.versions.stack-yaml }}.lock intermediate-stack.yaml.lock
          mv intermediate-stack.yaml.lock stack.yaml.lock

          echo "apply-ghc-options: everything" >> stack.yaml

          stack setup
          stack install gtk2hs-buildtools
          stack build hmatrix
          stack build --dependencies-only

      - name: Run Haskell tests
        run: |
          set -e
          stack build ipython-kernel --flag ipython-kernel:examples
          stack test ihaskell --no-terminal

      - name: Run integration test
        # The test is flaky on GHC 8.0 so we don't run it. As long as the tests
        # above pass, it's unlikely that we'll introduce a bug that we will
        # only catch through the integration test on this version and not other
        # versions.
        if: ${{ !contains(fromJSON('["stack-8.0.yaml", "stack-8.2.yaml"]'), matrix.versions.stack-yaml) }}
        run: |
          set -e
          stack build --no-terminal
          # Ensure that IHaskell notebook remains unchanged.
          # Run the notebook to regenerate the outputs, then compare the new notebook to the old one.
          stack install
          stack exec -- ihaskell install --stack
          test/acceptance.nbconvert.sh stack exec -- jupyter nbconvert
